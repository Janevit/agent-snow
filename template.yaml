AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: >
  This template demonstrates the deployment of Agents for Amazon Bedrock using AWS Serverless Application Model (SAM).

  Note: The demo relies on you having an account with OpenWeatherMap, and an API key to access the Weather service.
  This service is available on the OpenWeatherMap free plan. (https://openweathermap.org/current) Please review any 
  license terms applicable to the service with your legal team and confirm that your use case complies with the terms 
  before proceeding.

Parameters:

  OpenWeatherAPIKey:
    # The demo relies on you having an account with OpenWeatherMap, and an API key to access the Weather service. 
    # This service is available on the OpenWeatherMap free plan. (https://openweathermap.org/current)
    Type: String
    Description: OpenWeather API Key

  FoundationModel: 
    Type: String
    Description: Foundation model used by the agent
    Default: "anthropic.claude-3-haiku-20240307-v1:0"

Globals:
  Function:
    Timeout: 30
    MemorySize: 128

Resources:
  # This function handles and routes requests from the agent's action group.  In this demo this single function 
  # handles all requests and makes calls to supporting services.
  AgentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: func_agent/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Role: !GetAtt AgentFunctionRole.Arn
      Environment:
        Variables:

  # An IAM role specifying the permissions provided to the Lambda function.
  AgentFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub AgentFunctionRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub LambdaAgentFunctionPolicy-${AWS::StackName}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - geo:SearchPlaceIndexForText
                  - geo:SearchPlaceIndexForPosition
                Resource: !GetAtt LocationServicesPlacesIndex.Arn

